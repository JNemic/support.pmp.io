.container
  .row
    .col-sm-3
      %br
      = image_tag 'logo.png', class: 'img-responsive'
    .col-sm-9
      %h1
        The Public Media Platform
      %p
        Formed by five of the country’s <a href="http://publicmediaplatform.org/about/#section-4">leading public media organizations</a> the <b>Public Media Platform</b> (PMP) uses API technology to distribute digital content (audio, video, text, and images) from multiple public media entities across a variety of web and mobile platforms. This groundbreaking collaboration provides the industry’s first ever cross-media digital distribution system, with the ultimate goal of bringing public media to a larger audience.
      %h3
        Use this developer support site to:
      %ul
        - if current_user
          %li
            = link_to 'Manage your API user', credentials_path
        - else
          %li
            = link_to 'Manage your API user', login_path
          %li
            = link_to 'Request an API account', register_path
        %li
          = link_to 'Read the technical documentation', docs_path
        %li
          = link_to 'Report a problem', 'https://github.com/publicmediaplatform/pmp-issues/issues/new'
        %li
          = link_to 'View open issues', 'https://github.com/publicmediaplatform/pmp-issues/issues?state=open'
        %li
          = link_to 'Argue with the developer community', 'http://discuss.pmp.io'
        %li
          You can also find PMP developers on IRC at irc.freenode.net in the <code>#pmp</code> channel.
.partner-stats
  .container
    .row
      - @partners.each_with_index do |partner, idx|
        .col-sm-2{class: idx == 0 ? 'col-sm-offset-1' : ''}
          %h3
            = image_tag partner[:image]
            = partner[:name]
          %table.table
            %tr
              %td.count= number_with_delimiter partner[:stats][:story_count]
              %td.type= 'Story'.pluralize partner[:stats][:story_count]
            %tr
              %td.count= number_with_delimiter partner[:stats][:image_count]
              %td.type= 'Image'.pluralize partner[:stats][:image_count]
            %tr
              %td.count= number_with_delimiter partner[:stats][:audio_count]
              %td.type= 'Audio File'.pluralize partner[:stats][:audio_count]
            %tr
              %td.count= number_with_delimiter partner[:stats][:video_count]
              %td.type= 'Video'.pluralize partner[:stats][:video_count]
.container.recent-content
  .row
    %h2.title
      Recently Added Content
    - @recents.each do |rs|
      .col-lg-3.col-md-4.col-sm-6
        - if rs.permalink
          %a.thumbnail{href: rs.permalink}
            %img{src: rs.image_url, alt: rs.title}
            .img-cover{style: "background-image: url(#{rs.image_url})"}
            .caption.ellipsis
              %p.meta
                %span.date= rs.published_date.strftime('%b. %e, %Y')
                %span.show= rs.show_name || rs.creator_name.upcase
              %h3= rs.title
        - else
          .thumbnail
            %img{src: rs.image_url, alt: rs.title}
            .img-cover{style: "background-image: url(#{rs.image_url})"}
            .caption.ellipsis
              %p.meta
                %span.date= rs.published_date.strftime('%b. %e, %Y')
                %span.show= rs.show_name || rs.creator_name.upcase
              %h3= rs.title
